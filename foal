#!/usr/bin/env php
<?php declare(strict_types=1);
namespace SebastianBergmann\FOAL\CLI;

if (!version_compare(PHP_VERSION, PHP_VERSION, '=')) {
    fwrite(
        STDERR,
        sprintf(
            '%s declares an invalid value for PHP_VERSION.' . PHP_EOL .
            'This breaks fundamental functionality such as version_compare().' . PHP_EOL .
            'Please use a different PHP interpreter.' . PHP_EOL,

            PHP_BINARY
        )
    );

    die(1);
}

if (version_compare('8.3.0', PHP_VERSION, '>')) {
    fwrite(
        STDERR,
        sprintf(
            'foal X.Y.Z by Sebastian Bergmann.' . PHP_EOL . PHP_EOL .
            'This version of FOAL requires PHP >= 8.3.' . PHP_EOL .
            'You are using PHP %s (%s).' . PHP_EOL,
            PHP_VERSION,
            PHP_BINARY
        )
    );

    die(1);
}

if (isset($GLOBALS['_composer_autoload_path'])) {
    define('FOAL_COMPOSER_INSTALL', $GLOBALS['_composer_autoload_path']);

    unset($GLOBALS['_composer_autoload_path']);
} else {
    foreach (array(__DIR__ . '/../../autoload.php', __DIR__ . '/../vendor/autoload.php', __DIR__ . '/vendor/autoload.php') as $file) {
        if (file_exists($file)) {
            define('FOAL_COMPOSER_INSTALL', $file);

            break;
        }
    }

    unset($file);
}

if (!defined('FOAL_COMPOSER_INSTALL')) {
    fwrite(
        STDERR,
        'You need to set up the project dependencies using Composer:' . PHP_EOL . PHP_EOL .
        '    composer install' . PHP_EOL . PHP_EOL .
        'You can learn all about Composer on https://getcomposer.org/.' . PHP_EOL
    );

    die(1);
}

require FOAL_COMPOSER_INSTALL;

exit((new Factory)->createApplication()->run($_SERVER['argv']));
